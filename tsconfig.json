{
    "compilerOptions": {
        //То куда производится сборка. Не важно потому что сборка происходит с помощью Webpack
        "outDir": "./dist/",
        // Подсвечивает все места где не указан тип
        // Однако это не означает, что теперь вовсе нельзя использовать any.
        // Это значит лишь, что в подобных ситуациях разработчик должен явно писать any
        "noImplicitAny": false,
        "module": "ESNext",
        // В какую спецификацию компилируем: для поддержки большинства браузеров
        "target": "es5",
        // Что бы мы могли писать react компоненты - return <div>'Heloo'</div>
        "jsx": "react-jsx",
        // Компилятор будет обрабатывать не только TS файлы но и JS файлы
        "allowJs": true,
        // Строгий режим 
        "strict": true,
        "baseUrl": ".",
        "paths": {
            "*": [
                "./src/*"
            ]
        },
        "moduleResolution": "node",
        // esModuleInterop позволяет работать с пакетами, которые используют requier commonJS,
        // как с обычными пакетами с помощью import
        // Пример: import Moment from 'moment';
        // console.log(Moment)
        // без флага "esModuleInterop": true результат undefined
        // с флагом [object Object]
        "esModuleInterop": true,
        // Если какая либо библиотека не имеет default import,
        // лоадеры вроде ts-loader или bable-loader автоматически создают их
        // вместо такого импорта
        // import * as React from 'react';
        // можно писать такой
        // import React from 'react';
        "allowSyntheticDefaultImports": true,
        "isolatedModules": true,
    },
    "ts-node": {
        "compilerOptions": {
            "module": "CommonJS"
        }
    },
    "include": [
        "./config/jest/setupTests.ts",
        "./src/**/*.ts",
        "./src/**/*.tsx"
    ],
}